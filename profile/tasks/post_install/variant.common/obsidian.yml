---
- name: Check Whether Obsidian Backup Script Requires Permission To Run With Full Disk Access
  register: variant_common_fdautil_list_obsidian
  become: true
  ansible.builtin.command: /usr/local/bin/fdautil list
  changed_when: false

- name: Check For Obsidian Backup Stderr Log
  become: true
  ansible.builtin.stat:
    path: "{{ obsidian_backup_stderr_log }}"
  register: obsidian_backup_service_stderr_log_file_stat

- name: Check For Obsidian Backup Stdout Log
  become: true
  ansible.builtin.stat:
    path: "{{ obsidian_backup_stdout_log }}"
  register: obsidian_backup_service_stdout_log_file_stat

- name: Create Obsidian Stderr Logfile
  become: true
  ansible.builtin.file:
    path: "{{ obsidian_backup_stderr_log }}"
    state: touch
    mode: "0640"
    owner: "{{ obsidian_backup_user }}"
    group: admin
  when: not obsidian_backup_service_stderr_log_file_stat.stat.exists
  notify:
    - "Restart Obsidian Backup Service"

- name: Create Obsidian Stdout Logfile
  become: true
  ansible.builtin.file:
    path: "{{ obsidian_backup_stdout_log }}"
    state: touch
    mode: "0640"
    owner: "{{ obsidian_backup_user }}"
    group: admin
  when: not obsidian_backup_service_stdout_log_file_stat.stat.exists
  notify:
    - "Restart Obsidian Backup Service"

- name: Install Obsidian Backup Script
  become: true
  ansible.builtin.template:
    src: ./templates/obsidian-backup.sh.j2
    dest: "{{ brew_prefix }}/bin/obsidian-backup.sh"
    owner: "{{ obsidian_backup_user }}"
    group: admin
    mode: "0751"
  notify:
    - "Restart Obsidian Backup Service"

- name: Install Obsidian Backup Service
  become: true
  ansible.builtin.template:
    src: ./templates/md.obsidian.user.backup.plist.j2
    dest: "/Users/{{ obsidian_backup_user }}/Library/LaunchAgents/md.obsidian.user.backup.plist"
    owner: "{{ obsidian_backup_user }}"
    group: admin
    mode: "0640"
  notify:
    - "Restart Obsidian Backup Service"

- name: Grant Backup Script Permission To Run With Full Disk Access
  become: true
  ansible.builtin.command: /usr/local/bin/fdautil set agent md.obsidian.user.backup {{ brew_prefix }}/bin/obsidian-backup.sh
  changed_when: true
  when: "'md.obsidian.user.backup' not in variant_common_fdautil_list_obsidian.stdout"
